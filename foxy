#!/bin/sh
#
# See LICENSE file for details

#-------------------------------------------------------------------------------
# files & browsers
#-------------------------------------------------------------------------------

#browser=firefox
browser=surf
bookmarks=$HOME/repos/bookmarks/bookmarks.txt
tmpbookmarks=$HOME/repos/foxy/tmp.txt

#-------------------------------------------------------------------------------
# functions
#-------------------------------------------------------------------------------
usage () {
    echo "Usage: $0 [-h] [-t] [-n] [-s tag] [-a link @tag1 @tag2...@tagn]"
}

tag_array () {
    tags=""
    
    for i in $args
    do
	if [ $i == "-a" ];
	then
	    continue
	elif [ $i == "-s" -o $i == "-t" ];
	then
	    echo "don't use more than one flags"
	    usage
	    exit 1
	else
	    tags="$tags $i "
	fi
    done
    # keep only the tags
    tags=$(echo $tags | awk -F': ' '{print $1}' | sed -n 's/[^@]*//p')
    # append ": " to the and of the tags and the link
    echo $tags | sed 's/$/: /' | sed "s%$%$dalink%" >> $bookmarks
    # append new line to the end of the bookmark file
    echo '' >> $bookmarks
    exit 0
}

show_bmarks () {
    cat $bookmarks | grep $tag | awk -F': ' '{print $2}' > $tmpbookmarks
    url=$(cat $tmpbookmarks | dmenu -l 10)
    if [ -n "$url" ]; then
	if [ "$browser" = "firefox" ];
	then
	    $browser -new-tab $url 2>/dev/null
	else
	    $browser -isg $url &
	fi
    else
	echo "no links found"
    fi	
}

show_tags () {
    cat $bookmarks | awk '{print $0}' RS=' ' \
	| grep @ | sed 's/://' | sort -u | dmenu -l 10
}

count_marks () {
    cat $bookmarks | sed '/^\s*$/d' | wc -l
}

#-------------------------------------------------------------------------------
# argument parsing
#-------------------------------------------------------------------------------

aflag=0
nflag=0
sflag=0
tflag=0

while :
do
    case $1 in
	-h)
	    usage
	    exit 0
	    ;;
	-s)
	    nargs=$#
	    sflag=1
	    tag=$2
	    tag=$(echo $tag | sed 's/^/@/')
	    break
	    ;;
	-a)
	    nargs=$#
	    args=$*
	    dalink=$2
	    aflag=1
	    break
	    ;;
	-t)
	    nargs=$#
	    tflag=1
	    break
	    ;;
	-n)
	    nargs=$#
	    nflag=1
	    break
	    ;;
	*)
	    usage
	    exit 1
	    ;;
    esac
done
#-------------------------------------------------------------------------------

if [ $sflag -eq 1 -a $nargs -lt 3 -a $tflag -eq 0 ];
then
    show_bmarks $tag
    exit 0
elif [ $aflag -eq 1 -a $nargs -gt 2 ];
then
    tag_array $args $dalink
    exit 0
elif [ $tflag -eq 1 -a $nargs -eq 1 ];
then
    show_tags
    exit 0
elif [ $nflag -eq 1 -a $nargs -eq 1 ];
then
    count_marks
    exit 0
else
    echo 'not enough or too many params'
    usage
    exit 1
fi
