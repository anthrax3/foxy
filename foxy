#!/bin/sh
#
# See LICENSE file for details

#-------------------------------------------------------------------------------
# files & browsers
#-------------------------------------------------------------------------------

#browser=firefox
browser=surf
bookmarks=$HOME/repos/bookmarks/bookmarks.txt
tmpbookmarks=$HOME/repos/foxy/tmp.txt
sessionfile=$HOME/repos/foxy/tmpsession.html

#-------------------------------------------------------------------------------
# functions
#-------------------------------------------------------------------------------
usage () {
    echo "Usage: $0 [-h] [-n] [-t] [-c tag] [-d tag] [-s tag]" \
	"[-i tag] [-a link @tag1 @tag2...@tagn] [-b @tag1 @tag2...@tagn]"

    echo "-h        show this message"
    echo "-n        show the total number of bookmarks"
    echo "-t        show all available tags"
    echo "-c        show the total number of bookarks tagged with tag"
    echo "-d        search for bookmark, then delete it"
    echo "-s        search for a bookmark"
    echo "-i        interactively delete bookmarks"
    echo "-a        add a new bookmark"
    echo "-b        save whole firefox session as bookmarks (EXPERIMENTAL)"
}

tag_array () {
    tags=""
    
    for i in $*
    do
	if [ $i == "-a" ];
	then
	    continue
	elif [ $i == "-s" -o $i == "-t" ];
	then
	    echo "don't use more than one flags"
	    usage
	    exit 1
	else
	    tags="$tags $i "
	fi
    done
    # keep only the tags
    tags=$(echo $tags | awk -F': ' '{print $1}' | sed -n 's/[^@]*//p')
    # append ": " to the and of the tags and the link
    echo $tags | sed 's/$/: /' | sed "s%$%$url%" >> $bookmarks
    # append new line to the end of the bookmark file
    echo >> $bookmarks
    exit 0
}

save_session () {
    tags=""

    for i in $*
    do
	if [ $i == "-b" ];
	then
	    continue
	elif [ $i == "-s" -o $i == "-t" ];
	then
	    echo "don't use more than one flags"
	    usage
	    exit 1
	else
	    tags="$tags $i "
	fi
    done
    # keep only the tags
    tags=$(echo $tags | awk -F': ' '{print $1}' | sed -n 's/[^@]*//p')
    # save each link with the tags specified with the -b option
    cat $sessionfile | grep href | grep -o '"[^"]\+"' | tr '"' ' ' \
	| sed "s%^%$tags:%" | sed s/^.//g | sed s/$/\\n/ >> $bookmarks
    exit 0
}

show_bmarks () {
    cat $bookmarks | grep $tag | awk -F': ' '{print $2}' > $tmpbookmarks
    url=$(cat $tmpbookmarks | dmenu -l 10)
    if [ -n "$url" ];
    then
	if [ "$browser" = "firefox" ];
	then
	    $browser -new-tab $url 2>/dev/null
	else
	    $browser -isg $url &
	fi
    else
	echo "no links found"
    fi	
}

show_tags () {
    cat $bookmarks | awk '{print $0}' RS=' ' \
	| grep @ | sed 's/://' | sort -u
}

count_marks () {
    cat $bookmarks | sed '/^\s*$/d' | wc -l
}

del_mark () {
    deleting=$(cat $bookmarks | grep $mark | dmenu -l 10)

    if [ -n "$deleting" ];
    then
	# lines that are going to be deleted
	l1=$(cat $bookmarks | grep -n "$deleting" | awk -F":" '{ print $1 }')
	l2=$((l1 + 1))

	######################################################################
	# uncomment 2 lines below if you want to read the bookmark you are
	# deleting.
	#
	#open=$(echo "$deleting" | grep "$mark" | awk -F': ' '{print $2}')
	#
	#$browser -isg $open & # for surf
	#$browser -new-tab $url 2>/dev/null # for firefox
	#
	######################################################################

	#delete bookmarks and update $bookmarks
	sed "$l1,${l2}d" $bookmarks > $tmpbookmarks
	mv $tmpbookmarks $bookmarks
    else
	exit 0
    fi
}

enum_marks () {
    grep -c $tag $bookmarks
}

inter_delete () {
    cat $bookmarks | grep $tag | sed '/^\s*$/d' > tmp.txt

    while read line <&3
    do
	echo $line
	echo "Do you wish to delete this bookmark? (y|n)?"
	read yn
	case $yn in
	    Y | y)
		l1=$(cat $bookmarks | grep -n "$line" | awk -F":" '{ print $1 }')
		l2=$((l1 + 1))
		sed "$l1,${l2}d" $bookmarks > temp.txt
		mv temp.txt $bookmarks
		continue
		;;
	    N | n)
		continue
		;;
	    *)
		echo "Are you a fushitass? Answer yes or no."
		echo $line
		echo "Do you wish to delete this bookmark? (y|n)?"
		read yn
		;;
	esac
    done 3< tmp.txt
}
#-------------------------------------------------------------------------------
# argument parsing
#-------------------------------------------------------------------------------

aflag=0
bflag=0
cflag=0
dflag=0
iflag=0
nflag=0
sflag=0
tflag=0

while :
do
    case $1 in
	-h)
	    usage
	    exit 0
	    ;;
	-s)
	    sflag=1
	    tag=$2
	    break
	    ;;
	-a)
	    url=$2
	    aflag=1
	    break
	    ;;
	-t)
	    tflag=1
	    break
	    ;;
	-n)
	    nflag=1
	    break
	    ;;
	-d)
	    dflag=1
	    mark=$2
	    mark=$(echo $mark | sed 's/^/@/')
	    break
	    ;;
	-b)
	    bflag=1
	    break
	    ;;
	-c)
	    cflag=1
	    tag=$2
	    break
	    ;;
	-i)
	    iflag=1
	    tag=$2
	    break
	    ;;
	*)
	    usage
	    exit 1
	    ;;
    esac
done
#-------------------------------------------------------------------------------

if [ $sflag -eq 1 -o $cflag -eq 1 -o $iflag -eq 1 ];
then
    tag=$(echo $tag | sed 's/^/@/')
fi

if [ $sflag -eq 1 -a $# -lt 3 -a $tflag -eq 0 ];
then
    show_bmarks $tag
    exit 0
elif [ $bflag -eq 1 ];
then
    save_session $*
    exit 0
elif [ $aflag -eq 1 -a $# -gt 2 ];
then
    tag_array $* $url
    exit 0
elif [ $tflag -eq 1 -a $# -eq 1 ];
then
    show_tags
    exit 0
elif [ $nflag -eq 1 -a $# -eq 1 ];
then
    count_marks
    exit 0
elif [ $dflag -eq 1 -a $# -eq 2 ];
then
    del_mark $mark
    exit 0
elif [ $cflag -eq 1 -a $# -eq 2 ];
then
    enum_marks $tag
    exit 0
elif [ $iflag -eq 1 ];
then
    inter_delete $tag
    exit 0
else
    echo 'not enough or too many params'
    usage
    exit 1
fi
